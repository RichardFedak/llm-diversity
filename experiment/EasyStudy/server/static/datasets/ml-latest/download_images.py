import os
import csv
import requests
from imdb import Cinemagoer
from PIL import Image
from io import BytesIO
from shutil import copyfile

img_folder = "img"
placeholder = "no_cover.jpg"
links_csv = "links.csv"

new_movies = [97, 141, 161, 208, 1391, 1590, 1688, 3977, 3988, 4366, 5066, 5882, 6287, 6297, 26776, 45431, 52287, 52975, 54648, 135426, 143345, 166291, 176567, 176801, 183423, 184257, 184721, 192245, 192379, 192383, 192389, 193147, 193449, 193944, 193950, 193958, 194004, 194016, 194348, 194664, 194951, 195163, 195497, 195921, 196067, 196417, 196889, 196891, 196997, 197175, 197197, 197343, 197529, 197691, 197877, 197879, 197883, 199974, 200306, 200332, 200354, 200540, 200818, 200820, 201368, 201588, 201773, 201811, 202103, 202155, 202237, 202429, 203160, 203218, 203222, 203322, 203375, 204158, 204352, 204542, 204704, 204878, 205072, 205383, 205425, 205441, 205545, 206246, 206419, 206959, 207233, 208108, 208205, 208289, 208469, 208939, 209173, 209315, 209917, 209965, 210271, 210569, 210577, 210851, 210859, 210861, 210865, 212461, 213347, 213397, 213892, 213914, 214776, 215353, 216402, 216963, 217465, 217655, 219015, 219726, 219994, 222137, 222593, 223204, 223876, 223944, 224052, 224262, 224264, 224280, 224943, 225145, 225625, 225758, 225984, 228563, 231057, 233661, 233993, 235301, 236991, 237227, 239490, 240452, 241272, 242204, 242774, 242894, 242906, 244334, 247988, 249122, 249540, 250010, 250968, 251086, 252180, 252590, 253690, 254460, 254726, 255335, 255337, 257037, 257281, 258451, 258881, 258929, 259659, 259665, 260243, 260665, 260667, 261275, 261705, 261759, 261955, 263005, 263007, 263009, 263405, 263407, 263481, 263973, 265460, 266788, 268642, 268732, 269146, 269208, 269226, 269426, 269820, 270526, 270696, 270698, 271136, 271232, 271799, 271865, 271917, 272135, 272407, 272417, 272525, 272541, 273891, 274195, 274197, 274971, 275167, 275243, 275245, 275433, 275503, 275515, 276047, 276087, 276151, 276249, 276317, 276489, 276897, 277028, 277066, 277856, 278176, 278312, 278420, 278446, 278578, 278586, 278702, 278794, 278820, 278824, 278980, 279182, 279412, 279414, 279630, 279710, 279812, 280100, 280202, 280218, 280866, 280868, 280990, 281096, 281188, 281190, 281208, 281896, 281904, 281908, 281912, 282125, 282147, 282161, 282443, 282561, 282649, 282671, 282695, 282713, 282719, 282727, 282753, 282759, 282799, 282833, 282835, 282843, 282869, 282895, 282983, 282985, 283005, 283133, 283139, 283167, 283173, 283177, 283223, 283241, 283259, 283315, 283577, 283603, 283657, 283675, 283763, 283793, 283801, 283871, 283873, 283921, 284055, 284167, 284193, 284195, 284291, 284293, 284489, 284565, 284627, 284697, 284707, 284747, 284793, 284869, 284879, 284937, 285255, 285293, 285301, 285565, 285571, 285589, 285593, 285597, 285599, 285601, 285609, 285617, 285619, 285761, 285827, 285831, 285833, 285851, 285865, 285875, 285905, 285925, 285937, 285947, 285949, 285981, 286013, 286029, 286097, 286101, 286107, 286115, 286131, 286171, 286231, 286261, 286327, 286355, 286357, 286369, 286399, 286415, 286423, 286569, 286611, 286641, 286703, 286735, 286761, 286777, 286841, 286845, 286861, 286873, 286881, 286889, 286897, 286899, 286901, 286903, 286905, 286975, 287039, 287045, 287079, 287115, 287121, 287165, 287207, 287213, 287229, 287355, 287377, 287383, 287411, 287437, 287513, 287569, 287591, 287609, 287615, 287633, 287635, 287663, 287681, 287707, 287711, 287731, 287735, 287737, 287837, 288051, 288121, 288133, 288135, 288165, 288167, 288265, 288269, 288279, 288289, 288291, 288299, 288311, 288315, 288333, 288347, 288353, 288413, 288445, 288513, 288529, 288535, 288543, 288545, 288553, 288563, 288571, 288585, 288625, 288655, 288675, 288679, 288691, 288721, 288723, 288731, 288757, 288773, 288807, 288809, 288817, 288857, 288861, 288865, 288873, 288875, 288905, 288913, 288941, 288979, 288999, 289003, 289009, 289021, 289029, 289035, 289075, 289097, 289119, 289129, 289141, 289153, 289159, 289163, 289195, 289197, 289241, 289255, 289295, 289297, 289311, 289323, 289335, 289543, 289559, 289621, 289637, 289689, 289691, 289711, 289727, 289729, 289749, 289797, 289809, 289835, 289841, 289851, 289879, 289927, 289957, 289967, 289979, 289983, 289991, 290089, 290091, 290093, 290095, 290105, 290129, 290167, 290195, 290199, 290201, 290213, 290219, 290225, 290251, 290263, 290273, 290277, 290285, 290327, 290383, 290391, 290393, 290407, 290491, 290523, 290573, 290631, 290675, 290767, 290789, 290805, 291340, 291453, 291485, 291505, 291511, 291521, 291683, 291693, 291695, 291715, 291815, 291817, 291823, 291825, 291847, 291857, 291891, 292117, 292139, 292141, 292155, 292175, 292349, 292475, 292487, 292507, 292753]

ia = Cinemagoer()
os.makedirs(img_folder, exist_ok=True)

with open(links_csv, newline='', encoding="utf-8") as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        movie_id = row["movieId"]
        if int(movie_id) not in new_movies:
            continue
        imdb_id = str(row["imdbId"]).zfill(7)
        img_path = os.path.join(img_folder, f"{movie_id}.jpg")

        if os.path.exists(img_path):
            continue

        try:
            movie = ia.get_movie(imdb_id)
            movie_title = movie.get('title', 'Unknown')
            print(movie_title)
            cover_url = movie.get("full-size cover url", None)

            if cover_url:
                response = requests.get(cover_url, timeout=10)
                if response.status_code == 200:
                    img = Image.open(BytesIO(response.content))
                    width, height = img.size
                    TARGET_WIDTH = 200
                    coef = TARGET_WIDTH / width
                    new_height = int(height * coef)
                    img = img.resize((TARGET_WIDTH, new_height), Image.LANCZOS).convert('RGB')
                    img.save(img_path)
                    print(f"Downloaded and resized: {movie_id}")
                    continue
        except Exception as e:
            print(f"Error for {movie_id}: {e}")

        try:
            img = Image.open(placeholder)
            width, height = img.size
            TARGET_WIDTH = 200
            coef = TARGET_WIDTH / width
            new_height = int(height * coef)
            img = img.resize((TARGET_WIDTH, new_height), Image.LANCZOS).convert('RGB')
            img.save(img_path)
            print(f"Used placeholder for: {movie_id}")
        except Exception as e:
            print(f"Failed to use placeholder for {movie_id}: {e}")
